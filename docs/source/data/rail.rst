基线数据
~~~~~~~~~

.. _rail_concepts:

基本概念
^^^^^^^^^

在本软件中，一条\ **基线**\ 或者\ **线路**\ 是指一段连续、无分支结构的铁路线路。

线路的最基本信息由其里程表给出。里程表是一组车站的有序序列，规定基线上每个站的站名、里程标和一些其他的相关数据（详见下节）。里程表内车站从先到后的方向称为\ **下行方向**\ ，反之称为\ **上行方向**\ 。

.. note::
    本软件中所称的下行、上行方向由上面的叙述规定，原则上与实际铁路线路的上下行方向无关。为了减少不必要的误会，强烈建议设置的上下行方向与实际保持一致。

本软件允许设置\ **单向站**\ ，即仅上行或下行单边经过、另一边不经过的车站，也允许设置上下行不一致的里程。

.. note::
    逻辑上，本软件中所有线路皆为双线，暂不支持设置单双线。对于单线来说，只需要把上下行的相关数据设置成相同即可。

.. note::
    本软件允许一个运行图文件中有多条基线。除此之外，基线部分逻辑和pyETRC完全一致。


基线增删
^^^^^^^^^


里程表编辑
^^^^^^^^^^^

线路里程表编辑器可以从以下方式打开：

- 在运行图资源管理器中，双击基线名称，或右键菜单中选择 :guilabel:`编辑基线` 
- 在 :guilabel:`线路` 工具栏页面中，找到 :guilabel:`线路编辑` 按钮，选择相应的线路。
- 在当前线路的 :guilabel:`线路工具` 上下文页面中，点击 :guilabel:`基线编辑` 按钮。

下图所示为里程表编辑的页面。所有打开的基线编辑窗口，都在 :guilabel:`线路` 工具栏页面下 :guilabel:`线路编辑` 的下拉菜单中有对应选项，如果关闭了窗口，可以从这里再次打开。

.. figure:: /_static/img/data/railstation.png
    :alt: 基线编辑

其中涉及的主要数据字段说明如下：

- 站名。本线的站名必须非空且唯一。
- 里程。是指自首站开始的下行线延长公里数，可精确到三位小数。单位为公里。原则上首站里程应为0，如果不是0，则点击 :guilabel:`确定` 时，会提示是否修改为0。

.. tip::
    通过将首站的里程修改为非零，利用提交时的自动修改里程，可以实现本线里程的批量增减。

- 对里程。是指自首站开始的上行线延长公里数，可选填，精确至三位小数。如果不填，或者填入的不是数字，则按无数据处理。当需要计算上行线里程的区间缺失对里程数据时，则使用“里程”数据（即下行线里程）计算。对于上下行里程一致的线路，或者单线，直接不填即可。
- 显示。如果不勾选，则运行图中不会显示该站的水平线；如果按标尺排图，则“排图标尺”栏该站上下区间被打通为一个区间。
- 单向站。决定某车站是否为单向通过站，可以设置为 ``上下行`` ``下行`` ``上行`` ``不通过`` 四者之一。如果设置为 ``不通过`` ，则该车站不会被画在运行图上，相当于不存在。
- 办客、办货。设置该车站是否办理客运业务和货运业务。默认情况下，客车在办客车站营业，货车在非办客车站营业。

| TODO: 标尺、天窗；标尺排图（放到运行图格式那里）；


标尺、天窗
~~~~~~~~~~~
