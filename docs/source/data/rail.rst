基线数据
~~~~~~~~~

.. _rail_concepts:

基本概念
^^^^^^^^^

在本软件中，一条\ **基线**\ 或者\ **线路**\ 是指一段连续、无分支结构的铁路线路。

线路的最基本信息由其里程表给出。里程表是一组车站的有序序列，规定基线上每个站的站名、里程标和一些其他的相关数据（详见下节）。里程表内车站从先到后的方向称为\ **下行方向**\ ，反之称为\ **上行方向**\ 。

.. note::
    本软件中所称的下行、上行方向由上面的叙述规定，原则上与实际铁路线路的上下行方向无关。为了减少不必要的误会，强烈建议设置的上下行方向与实际保持一致。

本软件允许设置\ **单向站**\ ，即仅上行或下行单边经过、另一边不经过的车站，也允许设置上下行不一致的里程。但基线的第一个站和最后一个站必须设置为非单向站，即上下行都通过的站。

.. note::
    .. 逻辑上，本软件中所有线路皆为双线，暂不支持设置单双线。对于单线来说，只需要把上下行的相关数据设置成相同即可。
    自V1.2.0版本起，qETRC已经支持设置单双线。可参见知乎文章：https://zhuanlan.zhihu.com/p/584931750


.. note::
    本软件允许一个运行图文件中有多条基线。除此之外，基线部分逻辑和pyETRC完全一致。


基线增删
^^^^^^^^^

qETRC中允许一个运行图文件具有多条基线。有以下方式可以为运行图文件添加新的空白基线：

- 在运行图资源管理器中， :guilabel:`基线数据` 右键菜单中选择 :guilabel:`添加空白线路` 
- 在 :guilabel:`线路` 工具栏页面中，选择 :guilabel:`新建线路` 

新建线路后，将自动打开该线路的里程表编辑页面（参见下节）。

除了以上新建空白基线的方式外，还可以通过导入外部数据，或者从线路数据库中导入线路的方式，增加既有的基线。参见 :ref:`基线导入<sec_import_rail>` :doc:`线路数据库 </railnet/index>` 。

.. hint::
    基线和运行图页面是两种不同的数据元素；一个运行图页面可以包含一条或多条基线，一条基线也可以同时属于一个、多个或不属于任何运行图页面。新建空白基线后，还需要新建运行图页面，或者将新线路加入到既有运行图页面，才能显示运行图。参见 :ref:`sec_page` 。

可以通过以下方法删除一条基线：

- 在运行图资源管理器中的对应基线上使用右键菜单中的 :guilabel:`删除基线` 
- 在 :guilabel:`线路工具` 上下文工具栏页面中，选择 :guilabel:`删除基线`

删除基线时，会同时将基线从所在的运行图页面中移除；如果被移除后，运行图页面不包含任何线路，则该运行图页面也被删除。如果撤销，则运行图页面一并恢复。

.. warning::
    如果删除运行图文件中的全部基线，可能导致非预期的行为，虽然程序并不禁止这个操作。强烈不建议这样做。


.. _sec_import_rail:

基线导入
^^^^^^^^^^

:起始版本: V1.0.0
:最新修订: V1.2.5
:pyETRC对应功能: 无
:工具栏: :guilabel:`线路` | :guilabel:`导入线路`
:运行图资源管理器: :guilabel:`基线数据` | 右键菜单 | :guilabel:`导入线路`

由于qETRC支持运行图文件内存在多条基线，向运行图中引入新的基线成为了必要的操作，这与pyETRC不同（在pyETRC中，一个运行图文件就是一条基线，无所谓导入）。本节仅讨论从外部 **运行图文件** 导入线路的做法。此外，还可以从 :doc:`线路数据库</railnet/index>` 中导入线路数据。

使用本功能时，先在弹出的文件对话框中选择运行图文件。支持的格式有qETRC运行图文件（包括pyETRC， ``*.pyetgr`` ）、ETRC运行图文件（ ``*.trc`` ）。对于单线路的运行图，导入直接完成。对于多线路运行图，将弹出对话框，可在其中选择要导入的一条或多条线路（此逻辑自V1.2.5版本开始支持）。

若导入的线路与既有的线路重名，则自动重命名。

.. note::
    标尺、天窗数据被认为属于基线数据的一部分。在此操作中，标尺、天窗（如果存在）将自动同步导入。

.. _sec_rail_basic:

里程表编辑
^^^^^^^^^^^

线路里程表编辑器可以从以下方式打开：

- 在运行图资源管理器中，双击基线名称，或右键菜单中选择 :guilabel:`编辑基线` 
- 在 :guilabel:`线路` 工具栏页面中，找到 :guilabel:`线路编辑` 按钮，选择相应的线路。
- 在当前线路的 :guilabel:`线路工具` 上下文页面中，点击 :guilabel:`基线编辑` 按钮。

下图所示为里程表编辑的页面。所有打开的基线编辑窗口，都在 :guilabel:`线路` 工具栏页面下 :guilabel:`线路编辑` 的下拉菜单中有对应选项，如果关闭了窗口，可以从这里再次打开。

.. figure:: /_static/img/data/railstation.png
    :alt: 基线编辑

其中涉及的主要数据字段说明如下：

- 站名。本线的站名必须非空且唯一。
- 里程。是指自首站开始的下行线延长公里数，可精确到三位小数。单位为公里。原则上首站里程应为0，如果不是0，则点击 :guilabel:`确定` 时，会提示是否修改为0。

.. tip::
    通过将首站的里程修改为非零，利用提交时的自动修改里程，可以实现本线里程的批量增减。

- 对里程。是指自首站开始的上行线延长公里数，可选填，精确至三位小数。如果不填，或者填入的不是数字，则按无数据处理。当需要计算上行线里程的区间缺失对里程数据时，则使用“里程”数据（即下行线里程）计算。对于上下行里程一致的线路，或者单线，直接不填即可。
- 显示。如果不勾选，则运行图中不会显示该站的水平线；如果按标尺排图，则“排图标尺”栏该站上下区间被打通为一个区间。
- 单向站。决定某车站是否为单向通过站，可以设置为 ``上下行`` ``下行`` ``上行`` ``不通过`` 四者之一。如果设置为 ``不通过`` ，则该车站不会被画在运行图上，相当于不存在。
- 办客、办货。设置该车站是否办理客运业务和货运业务。默认情况下，客车在办客车站营业，货车在非办客车站营业。

| TODO: 标尺、天窗；标尺排图（放到运行图格式那里）；


.. _sec_railint:

标尺、天窗
~~~~~~~~~~~

标尺和天窗有时也可统称为\ **区间数据**\ ，它们都是附属于基线中每两个站之间所形成的\ **区间**\ （而非是车站本身）的数据。由于qETRC支持单向站（参见 :ref:`rail_concepts`\ ），区间与车站之间的关系并非简单的一一对应关系。举例来说，设有车站序列A,B,C，其中A,C为双向站，B为下行单向站，则存在下行区间A->B, B->C，上行区间C->A，但不存在下行区间A->C，也不存在上行区间C->B。

标尺又称\ **区间运行时分标准**\ ，它规定列车在每个区间运行所需的时长。每个区间有三项数据构成，即\ **通通时分**\ ，\ **起步附加时分**\ 和\ **停车附加时分**\ 。其中通通时分表示列车按本标尺运行时，在本区间前后站都不停车时所用的时长，起步附加时分表示列车在区间前站停车导致在本区间延长的运行时分，停车附加时分表示列车在区间后站停车导致在本区间延长的运行时分。三项数据皆精确到秒。

天窗（在原则上）规定线路每个区间的检修、维护等时间段，列车（原则上）不能在这个时间段驶入本区间。

与pyETRC不同，在qETRC中，标尺、天窗是强制“上下行分设”的，即下行A->B和上行B->A被视为两个不同的区间（相当于双线）。如果需要上下行使用相同的数据，可以复制数据。

标尺、天窗数据都是基线数据的一部分。每一条基线可以有任意多组标尺数据，但只能有两套天窗数据。


天窗基本编辑
^^^^^^^^^^^^^

以下方式可以打开天窗编辑窗口。所有打开的天窗编辑窗口，在工具栏 :guilabel:`线路` | :guilabel:`天窗编辑` 下拉菜单中有对应选项，可以控制窗口开关。

.. csv-table::

    运行图资源管理器, 右键菜单 :guilabel:`编辑天窗`
    工具栏, :guilabel:`线路` | :guilabel:`天窗编辑`

天窗编辑的界面如下图所示。

.. figure:: /_static/img/data/forbid.png
    :alt: 天窗编辑

每条线路的两套天窗（命名为 ``综合维修`` 和 ``综合施工`` ）以两个选项卡的形式展示；表中列出了线路的所有区间。可以编辑起始、结束时间，自动计算天窗时长。图上同时展示了右键菜单内容，通过这些选项（或对应的快捷键），可以快速操作，其中 :guilabel:`计算结束时间` 是以当前光标所在行的起始时间和窗口上方 ``默认时长`` 设置的时长，计算结束时间； :guilabel:`计算开始时间` 则是反过来，以当前行的结束时间和默认时长计算相应的起始时间。 :guilabel:`计算所有结束时间` 和 :guilabel:`计算所有开始时间` 则分别将以上两个选项应用于所有行。

.. hint::
    :guilabel:`复制当前数据到下一行` 选项执行完毕后，同时将被编辑的行切换到下一行。因此连续按 ``Alt`` + ``C`` 快捷键可以将当前行的数据连续向下复制。

.. note::
    天窗的起始、结束时间设置精确到分钟，表中的起始、结束时间以及时长显示格式皆为 ``时:分`` 。

``显示天窗`` 选项设置是否将天窗显示在运行图上，显示的效果如上图所示。其中，下行天窗以左上-右下的灰色线条显示，上行则是左下-右上的线条，上下行重合区域则显示为交叉线；综合施工天窗相比综合维修天窗，带有背景色。

.. note::
    天窗显示控制只要修改勾选状态立即生效，无需点击 :guilabel:`确定` 。天窗显示状态更改的操作支持撤销。


标尺基本编辑
^^^^^^^^^^^^^

以下方式可以打开标尺编辑的页面：

.. csv-table::

    运行图资源管理器, 右键菜单 :guilabel:`编辑标尺`
    工具栏, :guilabel:`线路(2)` | :guilabel:`标尺编辑`
    工具栏, 上下文页面 :guilabel:`线路工具(8)` | :guilabel:`标尺`
    工具栏, 上下文页面 :guilabel:`标尺管理(9)` | :guilabel:`编辑`

下图所示为标尺编辑停靠面板。

.. figure:: /_static/img/data/ruler-edit.png
    :alt: 标尺编辑页面

其中，属于同一条线路的标尺名称不可重复；\ ``分`` ``秒``\ 两列分别是各个区间\ **通通时分**\ 的分钟位和秒位；\ ``起`` ``停``\ 则分别为起步附加时分、停车附加时分，单位为秒。\ ``距离``\ 列数据从基线里程表自动计算；\ ``均速``\ 所示为\ **技术速度**\ ，即通通时分所对应的均速，由通通时分和区间距离自动计算，单位为千米每小时（km/h）。右键菜单提供在上下行之间复制数据的选项。

每个区间的标尺，若通通时分和起步、停车附加时分皆为0，则认为该区间缺数据；否则若这三者任一不为零，即认为区间有数据。只有区间数据完备的标尺，才可用作运行图的纵坐标划分使用 （参见 :doc:`/view/index`\ ）。


标尺的增删与合并
^^^^^^^^^^^^^^^^^

一条基线可以有多套标尺数据，从逻辑上对应于不同种类列车的运行时分标准。以下方式可以添加新的标尺：

.. csv-table::

    工具栏 , 上下文页面 :guilabel:`线路工具(8)` | :guilabel:`新建标尺`
    标尺综合, 参见 :ref:`subsec_read_ruler`

以下方式可以删除既有的标尺：

.. csv-table::

    运行图资源管理器, 右键菜单 :guilabel:`删除标尺`
    工具栏, 上下文页面 :guilabel:`标尺管理(9)` | :guilabel:`删除标尺`

以下方式可以打开合并标尺功能：

.. csv-table::

    运行图资源管理器, 右键菜单 :guilabel:`合并标尺`
    工具栏, 上下文页面 :guilabel:`标尺管理(9)` | :guilabel:`合并标尺`

将弹出对话框如下图所示：

.. figure:: /_static/img/data/ruler-merge.png
    :alt: 标尺合并
    
另选一个标尺，将该标尺的数据复制到当前标尺。被选择的标尺\ **不会**\ 被自动删除。选项中 ``重复的数据`` 是指若两个标尺都具有某区间的数据的情况，如果勾选，则以被选择的标尺数据覆盖当前标尺数据。此功能一般用于不同涵盖不同区段数据的标尺之间的合并。


单车次标尺提取
^^^^^^^^^^^^^^^

在有列车运行时刻数据的运行图文件中，并不总是需要逐项手工编写标尺数据；从列车的运行情况可以反推出标尺数据。本节和接下来几节将介绍这样获取数据的方法及其操作。

单车次标尺提取是从pyETRC最早发行版开始就提供的读取标尺方式。概念上，是假定所选的列车完全按照所求标尺运行，每个区间的起步、停车附加时分皆已知且相等。以下方式可以打开本功能：

.. csv-table::

    工具栏, 上下文页面 :guilabel:`标尺管理(9)` | :guilabel:`从车次提取`

.. figure:: /_static/img/data/readruler-single.png
    :alt: 单车次标尺提取

输入车次（可以是车次的一部分），按 :guilabel:`Tab` 键结束，在右侧下拉菜单中选择具体的匹配车次，再输入起步、停车的附加时分，点击 :guilabel:`OK` 完成读取。

注意单车次标尺提取功能仅在已存在的标尺上生效；如果希望读取到新的标尺中，请先新建空白标尺，再执行本操作。如果列车所覆盖的最近邻区间与标尺既有数据的区间有所重合，则既有数据将被覆盖。

.. note::
    此功能仅在线路的最近邻区间计算，不进行跨区间计算，也就是列车的时刻表原则上必须覆盖区段内的所有站。如果列车时刻表存在缺站，则缺站所在的前后（列车时刻表的）区间中的标尺数据无法读取和计算。

从速度计算标尺
^^^^^^^^^^^^^^^

此功能是 ``V1.1`` 版本后新增的功能。给出一个通通时分对应的均速，计算所有区间的近似标尺。功能入口：

.. csv-table::

    工具栏 , 上下文页面 :guilabel:`标尺管理(9)` | :guilabel:`从速度计算`

.. figure:: /_static/img/data/readruler-speed.png
    :alt: 从速度计算标尺

其中 ``运行速度`` 是指不计起停附加时分情况下，通通时分对应的平均速度大小。起步、停车附加时分将作为所有区间的起停附加时分使用。

``作为上限`` ``数据粒度`` 两个设置项共同决定对数据做修约处理的规则。直接按照技速算出来的通通时分很可能是很“零”的数据，例如 ``4分03秒`` 这样；而我们有时希望标尺是整10秒、整30秒或者整分钟之类的较“整”的数据。 ``数据粒度`` 设置项给出这里数据的最小单位。在修约数据时，如果勾选 ``作为上限`` 选项，则是把所给速度作为最大速度，计算出的区间技速决不超过所给速度，所以在修约秒数时是一律向上取整的；如果不勾选，则是作为近似值使用，修约秒数时采取类似“四舍五入”的做法，即当数据模（mod） ``数据粒度`` 的结果不小于其半时向上取整，否则向下取整。


.. _subsec_read_ruler:

标尺综合
^^^^^^^^^

此功能目前与pyETRC对应功能的逻辑和操作皆类似，请参见 `pyETRC文档 <https://pyetrc-rtd.readthedocs.io/zh_CN/master/>`_

.. _sec_page:

运行图页面
~~~~~~~~~~

运行图页面是qETRC相比pyETRC新增的一种数据结构或者层次，它是与qETRC多线路特性紧密相关的。（概念上的）运行图页面与（软件中实际展示的）运行图窗口是\ **严格一一对应**\ 的；只要运行图文件中存在一个页面，必存在唯一与之对应的窗口；即使将该窗口“关闭”，也可以从工具栏 :guilabel:`开始(1)` | :guilabel:`运行图窗口` 的菜单中再次打开。

一个运行图页面包含一条或多条线路。通常可以将几条相关的线路（比如存在主线-支线关系的线路，或前后接续的多段线路等），放在同一运行图页面中，这在软件中查看运行图、输出PNG/PDF文件时，都是一致的。下图给出了多线路运行图页面的一个示例。一条线路可以同时属于一个或多个运行图页面，亦可不属于任何运行图页面。

.. note::
    同一条线路不能在同一运行图页面内出现多次。

.. figure:: /_static/img/data/multi-rail-page.png
    :alt: 多线路运行图页面示例

运行图页面的增删
^^^^^^^^^^^^^^^^^

使用标准方式创建运行图页面，可以从以下方式进入：

.. csv-table::

    运行图资源管理器, :guilabel:`运行图视窗` | 右键菜单 | :guilabel:`添加运行图视窗`
    工具栏, :guilabel:`开始(1)` | :guilabel:`添加运行图`

.. figure:: /_static/img/data/page-new.png
    :alt: 添加运行图视窗

左右两张表格分别列出未选择的线路、已选择的线路及其基本信息。选择 :guilabel:`全选` 将左侧所有线路选择（加入右边已选择列表）； :guilabel:`清空` 则清除所有选择。 :guilabel:`上移` :guilabel:`下移` 可以调整右侧已选列表中的线路顺序。在左侧选中线路后，点击 :guilabel:`>` 可将其加入右边，即为选择该线路；右侧选中后点击 :guilabel:`<` 可将其返回到左边，即为取消选择。

选择好线路及其顺序，再输入运行图页面名称和备注（可选），点击 :guilabel:`OK` ，完成创建。

除了以上标准创建方法之外，考虑到很多情况下一个运行图页面就是用来展示一条线路的，本软件也提供了快速创建单线路运行图页面的方法，可以一键添加与线路同名的运行图页面，操作方式如下：

.. csv-table::

    运行图资源管理器 , 基线数据的具体项目 | 右键菜单 | :guilabel:`快速创建单线路运行图`
    工具栏 , 上下文页面 :guilabel:`线路工具(8)` | :guilabel:`快速创建`

删除既有的运行图，有以下操作方式：

.. csv-table::

    运行图资源管理器 , 运行图视窗的具体项目 | 右键菜单 | :guilabel:`删除运行图`
    工具 , 上下文页面 :guilabel:`运行图(5)` | :guilabel:`删除`

注意删除运行图页面不会删除其所属的线路，也不会删除任何列车数据。在软件中关闭运行图窗口（停靠面板），并不会删除运行图页面。以下方式可以显示所选的运行图页面，即使该页面此前被关闭：

.. csv-table::

    运行图资源管理器 , 运行图视窗的具体项目 | 双击
    运行图资源管理器 , 运行图视窗的具体项目 | 右键菜单 | :guilabel:`切换到运行图`
    工具栏 , 上下文页面 :guilabel:`运行图(5)` | :guilabel:`转到`

运行图页面的修改
^^^^^^^^^^^^^^^^

已创建过的运行图页面可以进一步修改/编辑。通过 :guilabel:`运行图页面(5)` | :guilabel:`编辑` 功能可以在不修改线路及其顺序的情况下，修改运行图名称及备注，如下图所示：

.. figure:: /_static/img/data/page-edit.png
    :alt: 运行图页面编辑

此外，通过 :guilabel:`运行图页面(5)` | :guilabel:`编辑` 菜单 | :guilabel:`重设页面` 功能可以修改运行图页面的线路及其顺序，此功能与上节所述的运行图页面创建界面一致。

每个运行图页面可以有一套独立的显示设置规则，参见 :doc:`/view/index` 。

运行图页面也是导出PNG/PDF运行图的单位，参见 :doc:`/interchange/index` 。

