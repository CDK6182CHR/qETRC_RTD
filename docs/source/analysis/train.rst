
列车运行分析
~~~~~~~~~~~~~

.. _sec_train_info:

列车信息
^^^^^^^^^

:起始版本: V1.0.0
:最新修订: V1.7.3
:pyETRC对应功能: 列车信息
:快捷键: ``Ctrl`` + ``Q``
:工具栏: ``列车(3)`` | ``速览信息``

此功能又称“速览信息”，是以一个停靠面板的形式呈现的，默认情况下放在界面右侧停靠。当在运行图中选取车次时，此面板的信息会同步为新选择的车次的信息。此面板显示列车的一些基本信息、运行统计信息等，只能查看，不能修改。方便起见，提供了一些转到其他功能（例如交路编辑面板或列车时刻表）的入口。

.. figure:: /_static/img/analysis/train-info.png
    :alt: 速览信息-V1.7.2

上图所示为速览信息窗口。篇幅所限，只截图了一部分。其中，大部分的条目应具有显然的含义，这里不赘述。对于一些不易理解或可能存在误解可能的，这里做必要的说明。

- ``旅客列车`` 显示当前车次是否属于旅客列车。旅客列车性质可以自动推定（根据列车种类），也可以手动指定。当使用自动推定时，将显示 ``自动`` ，并在后加括号中，注明推定结果。
- ``总/铺画站数`` 包含以斜杠分隔的两个数据。前者表示总站数，即时刻表中的车站数；后者表示铺画站数，即时刻表中、在本运行图中线路的车站上有对应的站数，即实际铺画到运行图的站数。
- ``运行线情况`` 统计了该车次所拥有的运行线及其涉及的线路数量。运行线的中断、折返，以及在不同线路上的运行线，都是不同的运行线，分别计数。
- ``总历时`` 是当前车次自时刻表第一站到达时刻起，至时刻表最后一站出发时刻止的总时长。 ``总停站时间`` 是上述时长中，停站时间的总和； ``总运行时间`` 是总历时去掉停站时间的纯运行时间。这几项数据总是可以从时刻表直接得出，与是否有线路数据、是否铺画到运行图无关。上述数据皆包含首站、末站的停车时间（如果存在；自V1.7.3版本起）。
- ``总里程`` 是指该列车自首站到末站的总里程。注意，由于首站和末站并不总是铺画到了运行图上，因此其位置（里程）信息及其关系可能是未知的，因此这项数据并不总是可得的。只有当首站和末站皆铺画在运行图上，且首站到末站之间，各段运行线间能够找到一条完全铺画在运行图上的路径时，总里程才是可知的。关于这部分的详细逻辑及其实现，可以参见知乎专栏文章： https://zhuanlan.zhihu.com/p/609652440。
- ``总旅行速度`` 是总里程除以总历时。 ``总技术速度`` 是总里程除以总运行时间。显然，这两者的计算都依赖于可用的总里程数据。当总里程不可知时，这两者自然不可知。
- ``铺画里程`` 是本运行图文件中，该列车的 **所有运行线** 的里程之和。在一些情况下，多条线路可能包含实际上是重复的区间；在这种情况下，铺画里程并非实际有意义的里程，甚至有可能比总里程数值更大。 ``铺画总时间`` 是相应的所有运行线的运行时间总和。由于前面提到的原因，铺画总时间有可能大于总历时。 ``铺画旅行速度`` 和 ``铺画技术速度`` 是与铺画里程、铺画总时间相应的旅行速度和技术速度。
- ``前序 (连线)`` 给出有交路信息的列车在其所属交路中的前序车次名，并在括号中注明是否连线。注意，此处的连线是指运行图铺画过程中是否 **实际** 可能有连线，可能与用户设置不同。例如，若交路中设置前序车次连线，但前序车次终到站与本车次始发站并非同一站，则这个连线的设置是无效的，实际画图时并不会连线，此处显示否。 ``后续 (连线)`` 与此类似，对应于后续车次。

列车时刻表
^^^^^^^^^^^

:起始版本: V1.0.0
:最新修订: 
:pyETRC对应功能: 车次时刻表、交互式时刻表
:快捷键: ``Ctrl`` + ``I``
:工具栏: ``列车(3)`` | ``速览时刻``

此功能又称“速览时刻”，提供一种双行格式的时刻表。在时刻表中，每个车站占两行，其中第一行为到达时刻、停车时长（或始发/终到标记），第二行为出发时刻、股道信息。默认情况下，以停靠面板形式，放在界面右侧停靠。

.. figure:: /_static/img/analysis/train-timetable.png
    :alt: 速览时刻-V1.7.2

界面首行显示车次及其始发终到站，只能查看，不能编辑。其下有两个选项。若勾选 ``仅停车/营业站`` ，则只有存在停车（包含始发或终到）或营业的车站被显示，其他车站隐藏；若勾选 ``编辑`` ，则可以在点击时刻表单元格后编辑时刻，对时刻的调整立即生效并重新铺画当前车次的运行线。本停靠面板所显示的列车随当前选择的列车变化而同步变化。
利用右键菜单，可以将车站定位到运行图上（如果有铺画点）。

表内文字颜色代表下列含义：

- 灰色：该车站没有铺画点，没有铺画在运行图上。即当前运行图中，没有运行线包含该车站。以下其他颜色，皆是在有铺画点的条件下进一步细化。
- 红色：该车站营业。通常只有在停车的站或始发终到站营业才有意义。关于营业站的设置，参见 :ref:`列车时刻表编辑<sec_timetable_basic>` 。
- 蓝色：该车站有停车（到达时刻和出发时刻不同）或为始发/终到站，但不营业。
- 黑色：其他情况（该车站为通过车站且有铺画点）。

表内的显示内容按如下规则（按照顺序依次匹配）：

- 对于有停点的车站（到达、出发时刻不相同）， ``时刻`` 列的第一、二行分别显示到达、出发时刻， ``停时股道`` 列第一行显示停车时长。
- 对于始发站， ``时刻`` 列第一行留空，第二行显示出发时刻。 ``停时股道`` 列第一行显示 ``始`` 标记。
- 对于终到站， ``时刻`` 列第一行为到达时刻，第二行显示 ``--`` ， ``停时股道`` 列第一行显示 ``终`` 标记。
- 对于通过站（不是以上三种情况的）， ``时刻`` 列第一行显示 ``...`` ，第二行显示通过时刻， ``停时股道`` 列第一行留空。


.. _sec_train_event:

列车事件表
^^^^^^^^^^^

:起始版本: V1.0.0
:最新修订: 
:pyETRC对应功能: 车次事件表
:ETRC对应功能: 车次切片
:工具栏: ``列车审阅 (6)`` | ``事件表``
:右键菜单: 运行图窗口右键 | ``事件表``

.. tip::
    关于此功能的详细逻辑、算法及其实现，可参见专栏文章：https://zhuanlan.zhihu.com/p/402664135

此功能展示所选列车运行过程中的一系列事件的时刻、位置等信息。此处所指的列车事件包括下列几类：

- 到达、出发；终到、始发。由列车时刻表直接给出。
- 通过。分为图定和推定两种。时刻表中到达时刻与出发时刻相同，且不是始发或终到的车站，是图定通过。不在时刻表中，但运行线跨过了的车站（线路上的车站），系统会根据前后的图定车站时刻，线性插值，推算通过是超额。
- 越行、让行。同方向（上行或下行）的两列车之间运行线相交，一方超过另一方运行，则前者越行后者，后者让行前者。通常越行/让行事件应在站内发生，若在区间发生，通常时刻表存在问题。
- 交会。不同方向（上下行）的两列车运行线相交，无论站内站外，皆构成交会事件。

qETRC中，列车事件表的计算是基于 **运行线** 完成的。各个事件皆有发生的地点（线路上的某个车站，或某个区间，以及里程标）。这就意味着，时刻表上没有铺画运行线的车站或者区间不会反映在事件表中。不同线路上发生的事件分别列出，其先后顺序不做保证。

.. figure:: /_static/img/analysis/train-events.png
    :alt: 列车事件表-V1.7.2

上图所示为列车事件表的界面。每个窗口对应于单一的列车（显示在标题栏上）。 ``客体`` 一列显示的是越行、让行、交会事件发生的对象（另一列车车次）；对于到达、出发、通过等事件，该列留空。其余各列具有显然的含义。
点击 ``ETRC风格`` 可以生成类似ETRC车次切片格式的文本，反映的信息与表格相同，例如：

.. code::

    G7568在宁杭高速线(双线)的事件表:
    1. 256.000 km.  11:50:00  [杭州东] 站 到达
    2. 256.000 km.  11:52:00  [杭州东] 站 发车
    3. 254.452 km.  11:52:25  [杭州东 - 杭州东所*] 区间 会 G343
    4. 247.000 km.  11:54:28  [杭州东所*] 站 通过 (推算)



运行线一览
^^^^^^^^^^^

:起始版本: V1.0.0
:pyETRC对应功能: 无
:工具栏: :guilabel:`列车审阅 (6)` | :guilabel:`运行线一览`

此功能用于展示当前所选列车的运行线信息。

.. figure:: /_static/img/analysis/train-line-info.png
    :alt: 运行线一览-V1.7.2

如上图所示是一个示例。左侧为运行线的基础信息，一行为一条运行线；右侧为当前所选运行线的逐站信息。其中，前4列为列车时刻表所包含的信息，后2列为线路车站表所包含的信息。对于匹配的车站（即通常所说的车站铺画到线路上），列车信息部分以蓝色显示，线路信息部分以红色显示。对于不匹配的车站，存在的数据以灰色显示。

.. note::
    qETRC不支持直接编辑列车运行线功能。但提供了基于 :ref:`列车径路<sec_train_path>` 设置修改运行线规划行为的功能。

时刻诊断
^^^^^^^^^

:起始版本: 
:pyETRC对应功能: 无
:工具栏: :guilabel:`列车(3)` | :guilabel:`时刻诊断`
:工具栏: :guilabel:`列车审阅(6)` | :guilabel:`时刻诊断`
:相关功能: :ref:`时刻表修正<sec_timetable_correction>`

此功能提供两个入口，工具栏 :guilabel:`列车 (3)` 页面的入口默认对全局所有列车进行，而上下文页面的默认对当前列车进行。
此功能分析列车时刻表，并提示列车时刻表中可能存在的一些错误。例如，如下图所示：

.. figure:: /_static/img/analysis/timetable-diagno.png
    :alt: 时刻诊断-V1.7.2

在上例中，8755次列车的运行线看起来明显不太正常。一是在三汇镇站停车时间过长，超过了20小时，这种情况有可能是到开时刻填反了（注意，qETRC中，总是认为出发时刻不早于到达时刻。时刻表以24小时为周期）。二是在区间与5601次列车发生区间越行。由于qETRC中建模的线路最多为双线，区间越行通常是不被允许的。

目前可能提示的问题包括下列几类：

1. 停车时间过长。应当考虑是否是到发时刻填反了。
2. 区间运行时间过长。应当考虑时刻表顺序是否有问题。
3. 区间会车。仅针对单线区间。
4. 区间越行。
5. 与天窗冲突。
6. 系统内部错误。

提示等级分为INFO, WARNING, ERROR三级，分别用黑色、蓝色、红色显示。
此功能可以配置进行时刻诊断的车次范围以及线路车站范围。

.. important::
    本功能仅根据内置的确定性算法判定有限范围内的可能异常，提示内容仅供参考。用户应自行理解和判断所提示内容。



列车区间运行统计
^^^^^^^^^^^^^^^^^^

:起始版本: 
:最新修订:
:pyETRC对应功能:
:工具栏: :guilabel:`列车(3)` | :guilabel:`运行统计`

此功能用于计算列车在某一 *区间* 内的运行情况。如下图所示。

.. figure:: /_static/img/analysis/train-interval-stat.png
    :alt: 列车区间运行统计-V1.7.2

在首行输入并选择车次后，可在接下来两行内选择要统计的范围。这个范围由 *列车时刻表上的* 车站定义。此后的内容为该列车在该区间内的运行统计数据。其中，
图定站点数是所选范围内的图定车站数，即时刻表上的车站数。包含两端站。
图定停点数是上述图定站点中，有停车的车站数，但不包括两端。总运行时长、总停站时长，亦不包含两端的车站。

.. note::
    图定停点数、总运行时长等不包含两端站点数的设计是基于一种类似旅客的逻辑：从所选第一站“上车”，最后一站“下车”，故两端点站的停站时间是没有影响的，不参与统计。

由于里程的计算依赖于运行线的铺画，其数据并不总是可得的。参见 :ref:`列车信息<sec_timetable_correction>` 。当里程数据可计算时，相应于总运行时长（总停站时长）的旅行速度（技术速度）也可以计算。同时，在下方显示列车在此区间（用于计算里程的）经由。若里程不可计算，则下方显示不可计算的原因。

列车对照分析
~~~~~~~~~~~~~

标尺对照
^^^^^^^^^

:起始版本: V1.0.0
:pyETRC对应功能: 标尺对照
:工具栏: :guilabel:`列车审阅(6)` | :guilabel:`标尺对照`
:右键菜单: 运行图页面右键菜单 | :guilabel:`标尺对照`

此功能提供当前所选中的车次在指定线路上与指定标尺之间的对照。

.. figure:: /_static/img/analysis/ruler-compare.png
    :alt: 标尺对照-V1.7.2

如上图所示的示例。在顶部选择线路及标尺后，表中列出当前列车在当前线路各个区间的运行数据。
其中，“通通”，“起”，“停”三列为当前选中标尺在所给区间的数据（原始设置的数据）；“附加”列显示当前车次在当前区间存在的起停附加分量，“起”与“停”分别表示存在起步附加和/或停车附加；“标准”一列表示当前列车在当前区间按照标尺运行的标准时分（考虑了上述的起停附加分量）；“实际”列为当前列车在当前区间的实际运行时长，“技速”列为相应的区间技术速度。若本次列车运行比标尺更快，则“差时”列为负值，当前行背景色为红色；反之，若本次列车运行比标尺更慢，则背景色为蓝色，“差时”列为正值；若完全匹配，则无背景色。背景色的深浅由实际运行时分与标尺标准时分之差决定。

.. note::
    在当前qETRC的实现中，列车与标尺之间 **没有绑定关系** ，即不存在“某列车属于某标尺”或“某列车不属于某标尺”的严格定义。此功能提供列车与标尺相符程度的直观比较，可以一定程度上作为判据。


车次对照
^^^^^^^^^

:起始版本: 
:pyETRC对应功能: 车次对照
:工具栏: :guilabel:`列车(3)` | :guilabel:`车次对照`

此功能提供两列车在 *同一线路* 上逐区间的运行时分对照。

.. figure:: /_static/img/analysis/train-compare.png
    :alt: 车次对照-V1.7.2

如上图所示，在窗口顶部选择线路和左右车次，下方即显示出运行数据的对比。
每行是 *列车时刻表上的* 一个区间。表中第1、2列为区间的信息，第3-5（6-8）列是左车次（右车次）在本区间的运行时长（从区间起点的出发时刻起，到区间终点的到达时刻止）、在本区间存在的起停附加情况以及技术速度。
对于指定区间，两车次运行时间若相同，则无背景色。否则，快者为红色底色，慢者为蓝色底色，相对差异越大，颜色越深（不透明度越高）。

.. note::
    只有当两车次都在所选线路上有运行线时，比较才可以进行。若车次时刻表不完整（有通过站的时刻没有给出在时刻表中），则这里的显示数据可能有较多缺失。

运行图对比
^^^^^^^^^^^

