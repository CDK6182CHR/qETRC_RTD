
运行图设置的层次
^^^^^^^^^^^^^^^^^

qETRC中，运行图显示控制、列车类型设置都有不同层次的设置，依附于不同的数据载体。运行图显示设置有如下三个层次，按照使用优先级排列：

1. 运行图页面的显示设置。自V1.0.1版本起，各运行图页面可以有独立的显示设置。
2. 运行图文件的显示设置。不直接作用于运行图页面，而是作为新建运行图页面的默认设置。
3. 系统默认设置。是整个qETRC软件的默认设置，用于新建的运行图文件。保存在程序目录下的 ``config.json`` 文件中。如果该文件不存在或者无法正常读取，将使用系统内置（硬编码）的默认设置。

其中，只有第1个层次的设置直接作用于运行图铺画。qETRC提供了一些在不同层次之间应用/覆盖设置的功能选项，例如将运行图文件的显示设置应用于所有页面，将系统默认设置应用于当前运行图等。

列车类型管理系统有如下两个层次：

1. 运行图文件的类型管理系统。
2. 系统默认的类型管理系统。与显示设置相同，保存于程序目录下的 ``config.json`` 文件中。若该文件不存在或无法正常读取，则使用系统内置的硬编码的默认设置。

同样，只有第1个层次直接作用于运行图铺画。

.. _sec_transparent_config:

透明模式
~~~~~~~~~~

:起始版本: V1.4.0

透明模式是为了解决显示控制、类型设置层次过于复杂的问题而设计的。所谓透明，是指上述运行图显示设置的第1、2层次，以及列车类型管理系统的第1层次可以被当做“透明”的，即不发挥作用。
如果某一层次开启了透明模式，则该层次的设置在读取文件时将被忽略，而直接使用下一层次的设置。例如，若运行图文件的显示设置为透明，则读取该运行图文件时，其显示设置自动读取当前的系统默认设置。如果系统默认设置改变了，则该运行图的显示设置也跟随变化。
如果用户修改了处于透明状态的显示控制、类型设置并应用，则透明状态被解除，该层次的设置将维护自身独立的状态，并保存到运行图文件。下一次读取时，若其下一层次的默认设置改变，也不会跟着改变。

.. note::
    注意，透明状态下，自动应用下一层级的设置， **只发生在打开运行图文件时** 。若打开运行图文件后，再修改运行图文件的显示设置，即使运行图页面的显示设置为透明状态，也不会跟随修改；只会在下一次重新打开本运行图文件时与之同步。


在全局配置选项中，设置了透明模式的全局开关（默认开启）。如果关闭该选项，则以上逻辑不发挥作用，透明模式总是处于关闭状态。


运行图显示设置
^^^^^^^^^^^^^^^^

【运行图显示设置】窗口文档


运行线外观控制
^^^^^^^^^^^^^^^^

qETRC中，列车运行线外观的控制可以分为自动和手动两种模式。若采用自动模式，则列车运行线的外观由列车所属的类型的运行线外观给出，参见 :ref:`列车类型管理<sec_train_type>` 。若采用手动模式，则可以单独为每一列车指定列车运行线样式。

.. figure:: /_static/img/view/trainline-style.png
    :alt: 列车运行线外观设置-V1.7.3

如上图所示是列车运行线外观设置的位置，可以在工具栏 :guilabel:`列车编辑(7)` 上下文页面以及列车编辑停靠面板中编辑。当勾选 ``自动`` 时，使用列车所属类型的运行线外观设置，当前车次的运行线外观设置不可用。当不勾选 ``自动`` 时，可分别设置运行线宽度、线形及颜色。


列车显示设置
^^^^^^^^^^^^^^^^

在qETRC中，可以筛选显示的列车运行线。这种筛选可以是批量的（按某些条件筛选），也可以是手动的（对特定车次直接设置是否显示）。
目前的实现中，列车运行线的显示筛选分为以下两类：

- 对 **列车运行线** 的显示设置。将列车的各段运行线作为相对独立的对象处理，可以一定程度上分别控制其显示与否。目前只有按行别控制（见下）时是这种逻辑。这种控制方式，
- 对 **列车** 整体的显示设置。可以单独选择某一车次，或根据类型选择一组车次，控制其显示状态。对同一车次显示状态的设置，同时应用于其在所有线路、运行图页面上的显示情况。

.. note::
    列车（列车运行线）显示与否的变更属于对运行图的修改，操作可撤销，可保存到文件（但存在一个例外。若启用运行线级别的行别显示控制，则部分显示运行线的列车的显示状态不会写入文件）。

.. 需要注意，在当前的实现中，显示与否是 **列车运行线的性质** 。这一论断包含以下的几个方面：

.. - 显示与否，是列车的状态信息，会随着运行图保存写入到文件中。修改列车的显示状态，是对运行图数据的修改，可以撤销或重做。
.. - 一般来说，运行线显示与否是列车的属性，不是某运行图（页面）上列车运行线对象的属性。这就是说，不能单独控制某一列车在某一运行图页面上是否显示，而只能控制同一列车在所有运行图页面上的显示状态。

qETRC提供了多种控制列车显示与否的方案，主要包括：

- 按照列车的种类或区段行别（上/下行）筛选显示车次；
- 使用通用列车筛选器筛选显示的车次；
- 逐个车次设置是否显示。

以下逐一简要介绍。


按列车行别和种类选择显示列车运行线
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:起始版本: V1.0.0
:最新更新: 
:pyETRC对应功能: ``显示车次设置`` 面板
:工具栏: :guilabel:`显示(4)`

此方案应当是qETRC中最方便快捷的筛选显示列车方法。这一部分的操作位于工具栏 :guilabel:`显示` 页面，占据了其大部分空间，如下图所示。

.. figure:: /_static/img/view/show-train-filter.png
    :alt: 显示车次筛选-V1.7.3

**按行别设置** 是指按照列车的 **某一段运行线** 的行别（上行/下行）决定该列车或该段运行线是否显示。

.. important::
    我们再次强调，行别不是列车的属性，而是列车\ **运行线**\ 的属性。此处提供根据行别筛选列车运行线显示信息，是严格按照某一段运行线的行别定义的。有关概念参见 :ref:`列车与运行线相关概念<sec_train_and_line>` 。

按行别设置运行线显示时，有两种模式，以是否选中 ``运行线级别控制`` 为分野。
若选中 ``运行线级别控制`` ，则此处对列车运行线的显示控制是 **运行线** 层次的。每一段运行线根据其行别被筛选是否显示，而无论同一列车、线路的其他运行线。例如，若点击 :guilabel:`隐藏下行` ，则所有下行的运行线（段）会被隐藏。若列车存在折返，则只有其中下行段的运行线被隐藏，而上行段的不受影响。

 .. important::
    请注意，根据定义，列车运行线是 **连续、单向** 的。因此，若列车在同一线路上发生折返（运行行别改变），则会产生至少两段运行线。

若不选中 ``运行线级别控制`` ，则对列车运行线的行别筛选是 **分线路** 的。若选择 ``使用入图行别`` ，则列车在任一线路（基线）上的显示情况由其在该线路上的 **第一段运行线** （按时刻表的先后顺序定）的行别控制。例如，若某车次1在线路A上的第一段运行线为下行，此时操作 ``隐藏下行`` ，则车次1在线路A上的 **所有** 运行线被隐藏。又若车次1同时在线路B上有运行线，且第一条运行线为上行，则其在线路B上的运行线现实情况不受前述操作影响。类似的，若选择 ``使用出图行别`` ，则按列车在基线上的最后一段运行线的行别判断。


**按类型设置** 是指按照列车所属的类型设置列车的运行线是否显示。在上图所示的方框中选择要显示的列车种类（高亮为选中状态），然后点击 :guilabel:`应用` ，可以将所选类型的列车运行线设置为显示，而未选中类型的列车的运行线设置为隐藏。 :guilabel:`客车类型` 和 :guilabel:`反向选择` 两个按钮提供了快速选择列车种类的操作。
若某些情况下类型表没有自动更新，可使用 :guilabel:`刷新类型表` 按钮手动刷新。

.. note::
    若使用此功能设置类型的显示/隐藏，则此前对个别列车单独设置的显示/隐藏数据将丢失。

使用通用列车筛选器
~~~~~~~~~~~~~~~~~~~

:起始版本: 1.0.0
:最新修订: 
:pyETRC对应功能: 列车筛选器
:工具栏: :guilabel:`显示(4)` | ``高级``

除了单纯的依照行别选择显示的列车运行线外，还可以使用 :ref:`通用列车筛选器<sec_train_filter>` 来筛选列车，这能提供更大的操作自由度。
点击 :guilabel:`显示(4)` 页面的 ``高级`` 按钮，可以编辑要应用的列车筛选器，通过该筛选器筛选的列车运行线将被显示，而不通过筛选的列车运行线将被隐藏。
点击 ``高级`` 按钮下方的下拉菜单，可以直接应用预设的筛选器。
关于列车筛选器的操作方法以及预设的设置方法，请参见 :ref:`通用列车筛选器<sec_train_filter>` 。

.. note::
    若使用此功能设置类型的显示/隐藏，则此前对个别列车单独设置的显示/隐藏数据将丢失。


逐一车次设置
~~~~~~~~~~~~~~

除了以上两种批量设置方法外，还可以个别的设置指定车次的运行线是否显示。当然，对于列车数量较多的情况，这种设置显然是相当繁琐的，因此一般也不推荐使用。在 ``车次管理`` 停靠面板中，通过勾选或者取消勾选 ``显示`` 一列，可以设置对应列车运行线的显示情况。

.. note::
    若使用以上所列的两种批量操作方法，则这样单独设置的显示/隐藏数据将丢失。若选中某一车次，则该车次运行线将被显示。



.. _sec_train_filter:

通用列车筛选器
^^^^^^^^^^^^^^^

:起始版本: V1.0.0
:最新修订: 
:pyETRC对应功能: 列车筛选器
:工具栏: :guilabel:`显示(4)` | ``高级``

qETRC提供一种通用列车筛选器，用于从一组列车中筛选出符合指定条件的一部分。这种列车筛选器在多个场景中都有应用，例如设置要显示的列车运行线，在车站事件表中设置要显示的列车，等。所有这些列车筛选器的操作都是一样的。

预设筛选器
~~~~~~~~~~~

:起始版本: V1.3.0
:pyETRC对应功能: 无
:工具栏: :guilabel:`列车(3)` | ``预设筛选``

自qETRC V1.3.0开始，支持保存一组预设筛选器，在需要的场景快速应用。预设筛选器是随运行图文件保存的。
如下图所示为预设列车筛选器的设置界面。左侧显示的是本运行图文件已有的各预设名称。点击 ``添加`` 来添加新的预设。通过点击预设名，可以在右侧显示并编辑该预设的详细信息。点击右侧的 ``确定`` 保存已编辑的信息。

.. figure:: /_static/img/view/predef-filter.png

    预设列车筛选器的设置界面

除了用户编辑的预设外，qETRC还提供内置的预设。内置的预设无需编辑也无法编辑。目前的内置预设包括以下两个：

- 旅客列车：包含所有的旅客列车（即 ``旅客列车`` 属性被设为是的列车，或 ``旅客列车`` 属性被设为自动，所属的列车种类被设置为旅客列车的列车）。
- 已显示车次：包含所有运行线被设置为“显示”的列车（即排除运行线被隐藏的列车）。


列车筛选器的编辑
~~~~~~~~~~~~~~~~

